{
  "hash": "4d544b7ffe33e3f100552f8e92691493",
  "result": {
    "markdown": "---\ntitle: \"Matching and Subclassification\"\nauthor: \"Lucas Puebla\"\n---\n\n\n# Assignment 1\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-1_bab3bc5926972d81eed6719bd7f7c3a6'}\n\n```{.r .cell-code}\n# Load packages\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(dagitty)\nlibrary(ggdag)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'ggdag'\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     filter\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggthemr)\nlibrary(MatchIt)\nggthemr(\"flat\")\nrm(list = ls())\n\n\n# Load data\ndata <- readRDS(\"~/GitHub/cdsba-lucaspuebla93/Causal_Data_Science_Data/membership.rds\")\nprint(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 10,000 × 5\n#>      age   sex pre_avg_purch  card avg_purch\n#>    <dbl> <int>         <dbl> <int>     <dbl>\n#>  1  31.3     1          61.1     0      70.8\n#>  2  40.7     1          43.0     1      51.4\n#>  3  23.2     1          18.0     1      26.0\n#>  4  65.3     0          82.0     1     124. \n#>  5  27.2     0          61.4     0      45.1\n#>  6  52.4     1          90.3     0     113. \n#>  7  39.5     0          71.0     1      88.6\n#>  8  26.5     1          65.6     0      40.3\n#>  9  28.4     1          50.2     0      40.3\n#> 10  34.7     1          25.1     1      15.1\n#> # ℹ 9,990 more rows\n```\n:::\n\n```{.r .cell-code}\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>       age             sex         pre_avg_purch         card       \n#>  Min.   :16.00   Min.   :0.0000   Min.   :-14.23   Min.   :0.0000  \n#>  1st Qu.:29.80   1st Qu.:0.0000   1st Qu.: 51.82   1st Qu.:0.0000  \n#>  Median :38.80   Median :1.0000   Median : 70.15   Median :0.0000  \n#>  Mean   :40.37   Mean   :0.5038   Mean   : 70.42   Mean   :0.4232  \n#>  3rd Qu.:49.20   3rd Qu.:1.0000   3rd Qu.: 88.79   3rd Qu.:1.0000  \n#>  Max.   :90.00   Max.   :1.0000   Max.   :169.42   Max.   :1.0000  \n#>    avg_purch     \n#>  Min.   :-28.61  \n#>  1st Qu.: 54.02  \n#>  Median : 76.24  \n#>  Mean   : 76.61  \n#>  3rd Qu.: 98.54  \n#>  Max.   :192.91\n```\n:::\n\n```{.r .cell-code}\ncor_matrix <- cor(data)\nprint(cor_matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                      age          sex pre_avg_purch        card   avg_purch\n#> age           1.00000000  0.012532675   0.517506430 0.105533628 0.448632638\n#> sex           0.01253267  1.000000000  -0.001221386 0.008468092 0.002181853\n#> pre_avg_purch 0.51750643 -0.001221386   1.000000000 0.192333327 0.855828507\n#> card          0.10553363  0.008468092   0.192333327 1.000000000 0.382352233\n#> avg_purch     0.44863264  0.002181853   0.855828507 0.382352233 1.000000000\n```\n:::\n\n```{.r .cell-code}\n# Define the DAG model with chosen relations and custom positions\ncustom_dag_model <- 'dag {\n  \"pre_avg_purch\" [pos=\"0.25,0.75\"]\n  \"age\" [pos=\"0.75,0.75\"]\n  \"card\" [pos=\"0.75,0.25\"]\n  \"avg_purch\" [pos=\"0.25,0.25\"]\n  \"pre_avg_purch\" -> \"avg_purch\"\n  \"age\" -> \"avg_purch\"\n  \"card\" -> \"avg_purch\"\n  \"age\" -> \"pre_avg_purch\"\n  \"age\" -> \"card\"\n}'\n\n# Plot the updated custom DAG using ggdag\nggdag(custom_dag_model) +\n  geom_dag_point(color = \"blue\") +\n  geom_dag_text(color = \"black\") +\n  geom_dag_edges(edge_color = \"black\")\n```\n\n::: {.cell-output-display}\n![](07_matching_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n# Assignment 2\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-2_0da311ef5c41f004930c418ffe099487'}\n\n```{.r .cell-code}\n# Compute the average outcome for the treatment group (premium membership)\navg_outcome_treatment <- colMeans(data[data$card == 1, \"avg_purch\"], na.rm = TRUE)\nprint(avg_outcome_treatment)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> avg_purch \n#>  91.15916\n```\n:::\n\n```{.r .cell-code}\n# Compute the average outcome for the control group (non-premium membership)\navg_outcome_control <- colMeans(data[data$card == 0, \"avg_purch\"], na.rm = TRUE)\nprint(avg_outcome_control)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> avg_purch \n#>  65.93965\n```\n:::\n\n```{.r .cell-code}\n# Compute the naive estimate of the Average Treatment Effect (ATE)\nnaive_ate <- avg_outcome_treatment - avg_outcome_control\nprint(naive_ate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> avg_purch \n#>   25.2195\n```\n:::\n:::\n\n\n# Assignment 3\n## Coarsened Exact Matching\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-3_bfd915c031034423856242a3f2f4861a'}\n\n```{.r .cell-code}\n# Coarsened Exact Matching\ncem_model <- matchit(card ~ age + sex + pre_avg_purch, data = data, method = \"cem\")\n\n# Estimate treatment effect using coarsened exact matching\ncem_estimate <- summary(cem_model, method = \"ATT\")\nprint(cem_estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> matchit(formula = card ~ age + sex + pre_avg_purch, data = data, \n#>     method = \"cem\")\n#> \n#> Summary of Balance for All Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> age                 42.0331       39.1574          0.2064     1.1524    0.0438\n#> sex                  0.5087        0.5002          0.0171          .    0.0086\n#> pre_avg_purch       76.3938       66.0438          0.3936     1.0276    0.1092\n#>               eCDF Max\n#> age             0.0864\n#> sex             0.0086\n#> pre_avg_purch   0.1545\n#> \n#> Summary of Balance for Matched Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> age                 41.6786       41.6527          0.0019     0.9995    0.0016\n#> sex                  0.5070        0.5070          0.0000          .    0.0000\n#> pre_avg_purch       75.7076       75.3560          0.0134     0.9951    0.0042\n#>               eCDF Max Std. Pair Dist.\n#> age             0.0070          0.1181\n#> sex             0.0000          0.0000\n#> pre_avg_purch   0.0128          0.1547\n#> \n#> Sample Sizes:\n#>               Control Treated\n#> All            5768.     4232\n#> Matched (ESS)  4407.4    4164\n#> Matched        5716.     4164\n#> Unmatched        52.       68\n#> Discarded         0.        0\n```\n:::\n:::\n\n\n## Nearest-Neighbor Matching\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-4_2816359bfa78c540a4b5c28998c91872'}\n\n```{.r .cell-code}\n# Nearest-Neighbor Matching\nnn_model <- matchit(card ~ age + sex + pre_avg_purch, data = data, method = \"nearest\")\n\n# Estimate treatment effect using nearest-neighbor matching\nnn_estimate <- summary(nn_model, method = \"ATT\")\nprint(nn_estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> matchit(formula = card ~ age + sex + pre_avg_purch, data = data, \n#>     method = \"nearest\")\n#> \n#> Summary of Balance for All Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> distance             0.4446        0.4075          0.3891     1.0721    0.1093\n#> age                 42.0331       39.1574          0.2064     1.1524    0.0438\n#> sex                  0.5087        0.5002          0.0171          .    0.0086\n#> pre_avg_purch       76.3938       66.0438          0.3936     1.0276    0.1092\n#>               eCDF Max\n#> distance        0.1572\n#> age             0.0864\n#> sex             0.0086\n#> pre_avg_purch   0.1545\n#> \n#> Summary of Balance for Matched Data:\n#>               Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#> distance             0.4446        0.4358          0.0927     1.2148    0.0196\n#> age                 42.0331       41.2401          0.0569     1.1171    0.0126\n#> sex                  0.5087        0.5009          0.0156          .    0.0078\n#> pre_avg_purch       76.3938       74.0413          0.0895     1.2047    0.0199\n#>               eCDF Max Std. Pair Dist.\n#> distance        0.0633          0.0928\n#> age             0.0298          0.9350\n#> sex             0.0078          1.0214\n#> pre_avg_purch   0.0633          0.1210\n#> \n#> Sample Sizes:\n#>           Control Treated\n#> All          5768    4232\n#> Matched      4232    4232\n#> Unmatched    1536       0\n#> Discarded       0       0\n```\n:::\n:::\n\n\n## Inverse Probability Weighting\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-5_2e62f2b6205dc45b74b06d16bde30f6f'}\n\n```{.r .cell-code}\n# Fit a logistic regression model to estimate the propensity scores\nlogistic_model <- glm(card ~ age + sex + pre_avg_purch, data = data, family = \"binomial\")\n\n# Calculate propensity scores\ndata$propensity_score <- predict(logistic_model, type = \"response\")\n\n# Inverse Probability Weighting\ndata$ipw_weights <- ifelse(data$card == 1, 1 / data$propensity_score, 1 / (1 - data$propensity_score))\n\n# Estimate treatment effect using inverse probability weighting\nweighted_model <- lm(avg_purch ~ card, data = data, weights = ipw_weights)\nipw_estimate <- summary(weighted_model)\nprint(ipw_estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = data, weights = ipw_weights)\n#> \n#> Weighted Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -205.353  -28.995   -0.275   28.787  214.307 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  70.2628     0.4320  162.66   <2e-16 ***\n#> card         14.9573     0.6109   24.48   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 43.19 on 9998 degrees of freedom\n#> Multiple R-squared:  0.05657,\tAdjusted R-squared:  0.05647 \n#> F-statistic: 599.5 on 1 and 9998 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}